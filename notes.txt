hooks are used to access the functionalities and features of react
ex:
If a train is moving at a certain speed and i want to go on the same speed so i will have to throw a hook over a train to achieve the speed
meaning that the functionalities of train are now available to the guy also

-----
useState Hook:

the useState hook is used to change the state of a component

useState hook has two functionalities:
1.state variable
2.state function(used to update the state of the function)

declaration:
const[var_name, function] = useState(initial value)

now on a click event the setcount value is updated to count + 1

-----
useEffect Hook:
this hook is used to create a side-effect

ex: aakhi raat tv joi to mathu dukhe 
meaning that due to occurence of an event a side effect is created

ex: when we render the project --> an api is fetched
events:
1.render the project
2.side effect: api is fetched

declaration: use the useEffect hook

it has three things:
1.first -> side-effect function
2.second -> clean-up function
3.third -> comma seperated list of dependencies

second: in this if we have added an event listner then that component is unmounted meaning the event listner is unmonted or removed
third: list of dependencies using which we can call the useEffect

-----
Variations:
simple useEffect hook: 
meaning it does not have any kind of first, second and third
it basically runs on every render 

-----
useContext hook is used to eliminate prop drilling issue 

